create_data <- function(N = 200) {
d <- tibble(W = runif(N, 0, .1)) %>%
mutate(X = runif(N) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(N))
# Use return() to send our created data back
return(d)
}
create_data(100)
library(tidyverse)
create_data <- function(N = 200) {
d <- tibble(W = runif(N, 0, .1)) %>%
mutate(X = runif(N) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(N))
# Use return() to send our created data back
return(d)
}
create_data(100)
library(tidyverse)
set.seed(1000)
# Make a function with the function() function. The "N = 200" argument
# gives it an argument N that we'll use for sample size. The "=200" sets
# the default sample size to 200
create_data <- function(N = 200) {
d <- tibble(W = runif(N, 0, .1)) %>%
mutate(X = runif(N) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(N))
# Use return() to send our created data back
return(d)
}
# Run our function!
create_data(500)
test<-create_data(500)
View(test)
set.seed(1000)
d <- tibble(W = runif(N, 0, .1)) %>%
mutate(X = runif(N) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(N))
set.seed(1000)
d <- tibble(W = runif(500, 0, .1)) %>%
mutate(X = runif(500) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(500))
View(d)
set.seed(1000)
# Make a function with the function() function. The "N = 200" argument
# gives it an argument N that we'll use for sample size. The "=200" sets
# the default sample size to 200
create_data <- function(N = 200) {
d <- tibble(W = runif(N, 0, .1)) %>%
mutate(X = runif(N) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(N))
# Use return() to send our created data back
return(d)
}
# Run our function!
test<-create_data(500)
d <- tibble(W = runif(500, 0, .1)) %>%
mutate(X = runif(500) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(500))
set.seed(1000)
# Make a function with the function() function. The "N = 200" argument
# gives it an argument N that we'll use for sample size. The "=200" sets
# the default sample size to 200
create_data <- function(N = 200) {
d <- tibble(W = runif(N, 0, .1)) %>%
mutate(X = runif(N) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(N))
# Use return() to send our created data back
return(d)
}
# Run our function!
test<-create_data(1)
d <- tibble(W = runif(500, 0, .1)) %>%
mutate(X = runif(500) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(500))
set.seed(1000)
# Make a function with the function() function. The "N = 200" argument
# gives it an argument N that we'll use for sample size. The "=200" sets
# the default sample size to 200
create_data <- function(N = 200) {
d <- tibble(W = runif(N, 0, .1)) %>%
mutate(X = runif(N) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(N))
# Use return() to send our created data back
return(d)
}
# Run our function!
test<-create_data(1)
set.seed(1000)
d <- tibble(W = runif(500, 0, .1)) %>%
mutate(X = runif(500) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(500))
set.seed(1000)
# Make a function with the function() function. The "N = 200" argument
# gives it an argument N that we'll use for sample size. The "=200" sets
# the default sample size to 200
create_data <- function(N = 200) {
d <- tibble(W = runif(N, 0, .1)) %>%
mutate(X = runif(N) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(N))
# Use return() to send our created data back
return(d)
}
# Run our function!
test<-create_data(500)
set.seed(1000)
d <- tibble(W = runif(500, 0, .1)) %>%
mutate(X = runif(500) < .2 + W) %>%
mutate(Y = 3*X + W + rnorm(500))
View(d)
View(test)
?map_df
test <- 1:1000
test <- 1:1000 %>% map_df(function(x) rnorm(10,x))
1:1000 %>% map_df(function(x) rnorm(10,x))
1:1000 %>% map(function(x) rnorm(10,x))
test<- 1:1000 %>% map(function(x) rnorm(10,x))
View(test)
library(tidyverse); library(purrr);
library(broom); library(vtable)
install.packages("vtable")
install.packages("broom")
library(tidyverse); library(purrr);
library(broom); library(vtable)
set.seed(1000)
# Estimation function. keep is the portion of data in each tail
# to keep. So .2 would keep the bottom and top 20% of X
est_model <- function(N, keep, true) {
d <- create_data(N, true)
# Regular estimator!
m1 <- lm(Y~X, data = d)
# Agus' estimator!
m2 <- lm(Y~X, data = d %>%
filter(X <= quantile(X, keep) | X >= quantile(X, (1-keep))))
# Return coefficients as a list
return(list('coef_reg' = coef(m1)[2],
'coef_agus' = coef(m2)[2]))
}
# Run 1000 simulations. Use map_df to stack all the
# results together in a data frame
results <- 1:1000 %>%
map_df(function(x) est_model(N = 1000,
keep = .2, true = 2))
library(tidyverse); library(purrr);
library(broom); library(vtable)
set.seed(1000)
# Estimation function. keep is the portion of data in each tail
# to keep. So .2 would keep the bottom and top 20% of X
est_model <- function(N, keep, true) {
d <- create_data(N, true)
# Regular estimator!
m1 <- lm(Y~X, data = d)
# Agus' estimator!
m2 <- lm(Y~X, data = d %>%
filter(X <= quantile(X, keep) | X >= quantile(X, (1-keep))))
# Return coefficients as a list
return(list('coef_reg' = coef(m1)[2],
'coef_agus' = coef(m2)[2]))
}
# Run 1000 simulations. Use map_df to stack all the
# results together in a data frame
results <- 1:1000 %>%
map_df(function(x) est_model(N = 1000, keep = .2, true = 2))
set.seed(1000)
create_data <- function(N, true) {
d <- tibble(X = rnorm(N)) %>%
mutate(Y = true*X + rnorm(n()))
return(d)
}
# Estimation function. keep is the portion of data in each tail
# to keep. So .2 would keep the bottom and top 20% of X
est_model <- function(N, keep, true) {
d <- create_data(N, true)
# Regular estimator!
m1 <- lm(Y~X, data = d)
# Agus' estimator!
m2 <- lm(Y~X, data = d %>%
filter(X <= quantile(X, keep) | X >= quantile(X, (1-keep))))
# Return coefficients as a list
return(list('coef_reg' = coef(m1)[2],
'coef_agus' = coef(m2)[2]))
}
# Run 1000 simulations. Use map_df to stack all the
# results together in a data frame
results <- 1:1000 %>%
map_df(function(x) est_model(N = 1000, keep = .2, true = 2))
View(test)
sumtable(results)
View(test)
View(d)
View(results)
library(sf)
library(scales)
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(hrbrthemes)
library(kableExtra)
library(viridis)
library(DT)
library(plotly)
library(readxl)
library(rgeos)
library(maptools)
library(directlabels)
library(ggrepel)
library(ggthemes)
library(cancensus)
library(bookdown)
library(geomtextpath)
library(egg)
library(ggtext)
library(ragg)
library(scico)
library(haven)
library(here)
library(knitr)
library(jpeg)
library(imager)
library(Statamarkdown)
library(ggdag)
library(dagitty)
library(geomtextpath)
library(gifski)
create_data <- function(nrep = 420, b0 = 700, b1 = -2) {
simdat <- data.frame(eta=rnorm(nrep,0,20), x = rnorm(nrep,20,2)) %>%
mutate(y = b0 +b1*x + eta)
return(simdat)
}
plotdat <- 1:100 %>% map_df(function(x) create_data())
View(plotdat)
?rep
plotdat <- 1:100 %>% map_df(function(x) create_data()) %>% mutate(rep = rep(1:420, times=100))
View(plotdat)
?map_df
library(sf)
library(scales)
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(hrbrthemes)
library(kableExtra)
library(viridis)
library(DT)
library(plotly)
library(readxl)
library(rgeos)
library(maptools)
library(directlabels)
library(ggrepel)
library(ggthemes)
library(cancensus)
library(bookdown)
library(geomtextpath)
library(egg)
library(ggtext)
library(ragg)
library(scico)
library(haven)
library(here)
library(knitr)
library(jpeg)
library(imager)
library(Statamarkdown)
library(ggdag)
library(dagitty)
library(geomtextpath)
library(gganimate)
library(gifski)
library(vtable)
knitr::opts_chunk$set(
echo=FALSE,
message = FALSE,
warning = FALSE,
fig.retina = 3,
fig.align = "center"
)
set.seed(9810078)
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta, y1 = y0 + 5, treat_eff = y1 - y0)
sumtable(data)
summary(data)
sumtable(data, summ=c('notNA(x)','mean(x)','sd(x)'))
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta, y1 = y0 + 5, treat_eff = y1 - y0)
sumtable(data, summ=c('notNA(x)','mean(x)','sd(x)'))
X = sample(0:1, # sample from values 0 and 1
200, # get 200 observations
replace = TRUE, # sample with replacement
prob = c(.8, .2)))
X <- sample(0:1, # sample from values 0 and 1
200, # get 200 observations
replace = TRUE, # sample with replacement
prob = c(.8, .2)))
X <- sample(0:1, 200,replace = TRUE, prob = c(.8, .2)))
X <- sample(0:1, 200,replace = TRUE, prob = c(.8, .2))
data %<>% mutate(w = if_else(runif(100000) > .5,1,0),
y = y0 + (y1-y0)*w) %>%
group_by(w)
head(data)
?head()
ggplot(data, aes(x=y0, color=as.factor(w))) +
geom_density(alpha = .4, size=2) +
theme_pander(nomargin=FALSE, boxes=TRUE)
ggplot(data, aes(x=y0, color=as.factor(w))) +
geom_density(alpha = .4, size=2) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Distribution of Y0")
test<-summarize(data,mean(y))
View(test)
summarize(mean(y))$`mean(y)`[2]
summarize(data,mean(y))$`mean(y)`[2]
data %>%
summarize(data,mean(y))$`mean(y)`[2] - summarize(data,mean(y))$`mean(y)`[1]
summarize(data,mean(y))$`mean(y)`[2] - summarize(data,mean(y))$`mean(y)`[1]
data2 <- data %>%
ungroup() %>%
select(eta, y0,y1) %>%
mutate(w = if_else(eta + runif(100000,-1,1) > 0,1,0),
y = y0 + (y1-y0)*w)
sumtable(data, summ=c('notNA(x)','mean(x)','sd(x)'))
data2 <- data %>%
ungroup() %>%
select(eta, y0,y1) %>%
mutate(w = if_else(eta + runif(100000,-1,1) > 0,1,0),
y = y0 + (y1-y0)*w)
sumtable(data2, summ=c('notNA(x)','mean(x)','sd(x)'))
data2 <- data %>%
ungroup() %>%
select(eta, y0,y1) %>%
mutate(w = if_else(eta + runif(100000,-1,1) > 0,1,0),
y = y0 + (y1-y0)*w) %>%
group_by(w)
sumtable(data2, summ=c('notNA(x)','mean(x)','sd(x)'))
data2 <- data %>%
ungroup() %>%
select(eta, y0,y1) %>%
mutate(w = if_else(eta + runif(100000,-1,1) > 0,1,0),
y = y0 + (y1-y0)*w) %>%
group_by(w)
sumtable(data2, summ=c('notNA(x)','mean(x)','sd(x)'), group=w)
data2 <- data %>%
ungroup() %>%
select(eta, y0,y1) %>%
mutate(w = if_else(eta + runif(100000,-1,1) > 0,1,0),
y = y0 + (y1-y0)*w) %>%
group_by(w)
sumtable(data2, summ=c('notNA(x)','mean(x)','sd(x)'), group="w")
data2 <- data %>%
ungroup() %>%
select(eta, y0,y1) %>%
mutate(w = if_else(eta + runif(100000,-1,1) > 0,1,0),
y = y0 + (y1-y0)*w) %>%
group_by(w)
sumtable(data2, summ=c('notNA(x)','mean(x)','sd(x)'), group="w", group.long=TRUE)
?runif
data4 <- data %>%
ungroup() %>%
select(eta) %>%
mutate(x = if_else(runif(100000) > .5,1,0),
w =  x + if_else(runif(100000, -1,1) > .5,1,0),
y0 = 2 + 3*x + eta,
y1 = y0 + 5,
y = y0 + (y1-y0)*w) %>%
group_by(w)
sumtable(data4,
summ=c('notNA(x)','mean(x)','sd(x)'),
group="w",
group.long = TRUE)
data4 <- data %>%
ungroup() %>%
select(eta) %>%
mutate(x = if_else(runif(100000) > .5,1,0),
w = if_else(x + runif(100000, -1,1) > .5,1,0),
y0 = 2 + 3*x + eta,
y1 = y0 + 5,
y = y0 + (y1-y0)*w) %>%
group_by(w)
sumtable(data4,
summ=c('notNA(x)','mean(x)','sd(x)'),
group="w",
group.long = TRUE)
purl()
purl("rubin.Rmd")
library(sf)
library(scales)
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(hrbrthemes)
library(kableExtra)
library(viridis)
library(DT)
library(plotly)
library(readxl)
library(rgeos)
library(maptools)
library(directlabels)
library(ggrepel)
library(ggthemes)
library(cancensus)
library(bookdown)
library(geomtextpath)
library(egg)
library(ggtext)
library(ragg)
library(scico)
library(haven)
library(here)
library(knitr)
library(jpeg)
library(imager)
library(Statamarkdown)
library(ggdag)
library(dagitty)
library(geomtextpath)
library(gganimate)
library(gifski)
library(vtable)
knitr::opts_chunk$set(
echo=FALSE,
message = FALSE,
warning = FALSE,
fig.retina = 3,
fig.align = "center"
)
set.seed(9810078)
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta, y1 = y0 + 5,
treat_eff = y1 - y0)
sumtable(data, summ=c('notNA(x)','mean(x)','sd(x)'))
data %<>% mutate(w = runif(100000) > .5),
data %<>% mutate(w = runif(100000) > .5,
y = y0 + (y1-y0)*w) %>%
group_by(w)
head(data)
ggplot(data, aes(x=y0, color=as.factor(w))) +
geom_density(alpha = .4, size=2) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Distribution of Y0")
data %<>% mutate(w = if_else(runif(100000) > .5,1,0),
y = y0 + (y1-y0)*w) %>%
group_by(w)
library(sf)
library(scales)
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(hrbrthemes)
library(kableExtra)
library(viridis)
library(DT)
library(plotly)
library(readxl)
library(rgeos)
library(maptools)
library(directlabels)
library(ggrepel)
library(ggthemes)
library(cancensus)
library(bookdown)
library(geomtextpath)
library(egg)
library(ggtext)
library(ragg)
library(scico)
library(haven)
library(here)
library(knitr)
library(jpeg)
library(imager)
library(Statamarkdown)
library(ggdag)
library(dagitty)
library(geomtextpath)
library(gganimate)
library(gifski)
library(vtable)
knitr::opts_chunk$set(
echo=FALSE,
message = FALSE,
warning = FALSE,
fig.retina = 3,
fig.align = "center"
)
set.seed(9810078)
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta, y1 = y0 + 5,
treat_eff = y1 - y0)
sumtable(data, summ=c('notNA(x)','mean(x)','sd(x)'))
data %<>% mutate(w = if_else(runif(100000) > .5,1,0),
y = y0 + (y1-y0)*w) %>%
group_by(w)
head(data)
setwd("~/Documents/GitHub/website")
hugo
