transition_states(rep)
aim
aim<-ggplot(sims, aes(x=x, y=y, group=rep)) +
geom_point() +
geom_abline(aes(intercept=lm(data=simdat, formula=y~x)$coefficients[1], slope=lm(data=simdat, formula=y~x)$coefficients[2]))
aim
aim<-ggplot(sims, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_abline(aes(intercept=lm(data=simdat, formula=y~x)$coefficients[1], slope=lm(data=simdat, formula=y~x)$coefficients[2])) +
transition_states(rep)
aim
?gather
stocks <- tibble(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
View(stocks)
gather(stocks, "stock", "price", -time)
stocks1 %>% gather("stock", "price", -time)
stocks1 <- gather(stocks,"stock", "price", -time)
View(stocks1)
simolsfun <- function(nrep = 420, b0 = 700, b1 = -2) {
simdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta)
simdat2<-(simdat)
}
sims <- t(replicate(n = 50, simolsfun(), simplify = TRUE)) %>%
as.data.frame()
View(sims)
simolsfun <- function(nrep = 420, b0 = 700, b1 = -2) {
maindat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=1)
for (i in 2:50) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=i)
maindat <-rbind(maindat, subdat)
}
}
simolsfun()
simolsfun <- function(nrep = 420, b0 = 700, b1 = -2) {
maindat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=1)
for (i in 2:50) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=i)
maindat <-rbind(maindat, subdat)
}
maindat
}
simolsfun()
simolsfun <- function(nrep = 420, b0 = 700, b1 = -2) {
maindat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=1)
for (i in 2:50) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=i)
maindat <-rbind(maindat, subdat)
}
return(maindat)
}
simolsfun()
function(nrep = 420, b0 = 700, b1 = -2) {
maindat <<- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=1)
for (i in 2:50) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=i)
maindat <<-rbind(maindat, subdat)
}
}
function(nrep = 420, b0 = 700, b1 = -2) {
maindat <<- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=1)
for (i in 2:50) {
subdat = data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=i)
maindat <<-rbind(maindat, subdat)
}
}
function(nrep = 420, b0 = 700, b1 = -2) {
maindat <<- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=1)
for (i in 2:50) {
subdat = data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=i)
maindat <<-rbind(maindat, subdat)
}
return(maindat)
}
simfun <- function(nrep = 420, b0 = 700, b1 = -2) {
maindat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=1)
for (i in 2:50) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=i)
maindat <-rbind(maindat, subdat)
}
assign("df",maindat,envir = .GlobalEnv)
}
simfun
simfun()
View(df)
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_abline(aes(intercept=lm(data=simdat, formula=y~x)$coefficients[1], slope=lm(data=simdat, formula=y~x)$coefficients[2])) +
transition_states(rep)
aim
install.packages("gifski")
library(sf)
library(scales)
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(hrbrthemes)
library(kableExtra)
library(viridis)
library(DT)
library(plotly)
library(readxl)
library(rgeos)
library(maptools)
library(directlabels)
library(ggrepel)
library(ggthemes)
library(cancensus)
library(bookdown)
library(geomtextpath)
library(egg)
library(ggtext)
library(ragg)
library(scico)
library(haven)
library(here)
library(knitr)
library(jpeg)
library(imager)
library(Statamarkdown)
library(ggdag)
library(dagitty)
library(geomtextpath)
library(gifski)
simfun <- function(nrep = 420, b0 = 700, b1 = -2) {
maindat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=1)
for (i in 2:50) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=i)
maindat <-rbind(maindat, subdat)
}
assign("df",maindat,envir = .GlobalEnv)
}
#sims <- t(replicate(n = 50, simolsfun(), simplify = TRUE)) %>%
#  as.data.frame() %>%
#  cbind.data.frame(., rep=seq(1:50))
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_abline(aes(intercept=lm(data=simdat, formula=y~x)$coefficients[1], slope=lm(data=simdat, formula=y~x)$coefficients[2])) +
transition_states(rep)
simfun()
View(simfun)
View(simfun)
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_abline(aes(intercept=lm(data=simdat, formula=y~x)$coefficients[1], slope=lm(data=simdat, formula=y~x)$coefficients[2])) +
transition_states(rep)
simfun <- function(nrep = 420, b0 = 700, b1 = -2) {
maindat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=1)
for (i in 2:50) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=i)
maindat <-rbind(maindat, subdat)
}
assign("df",maindat,envir = .GlobalEnv)
}
simfun()
?assign()
df
view(df)
maindat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2),y = b0 + b1*x + eta, rep=1)
maindat <- data.frame(eta=rnorm(420,0,20), x=rnorm(420,20,2),y = b0 + b1*x + eta, rep=1)
maindat <- data.frame(eta=rnorm(420,0,20), x=rnorm(420,20,2),y = 700 -2*x + eta, rep=1)
maindat <- list(eta=rnorm(420,0,20), x=rnorm(420,20,2),y = 700 -2*x + eta, rep=1)
maindat <- list(eta=rnorm(420,0,20), x = rnorm(420,20,2), rep=1)
View(maindat)
maindat <- data.frame(eta=rnorm(420,0,20), x = rnorm(420,20,2), rep=1)
View(maindat)
maindat <- data.frame(eta=rnorm(420,0,20), x = rnorm(420,20,2), rep=1) %>%
mutate(y = 700 -2*x + eta)
View(maindat)
simfun <- function(nrep = 420, b0 = 700, b1 = -2) {
maindat <- data.frame(eta=rnorm(nrep,0,20), x = rnorm(nrep,20,2), rep=1) %>%
mutate(y = b0 -b1*x + eta)
for (i in 2:50) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2), rep=i) %>%
mutate(y = 700 -2*x + eta)
maindat <-rbind(maindat, subdat)
}
assign("df",maindat,envir = .GlobalEnv)
}
simfun()
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_abline(aes(intercept=lm(data=simdat, formula=y~x)$coefficients[1], slope=lm(data=simdat, formula=y~x)$coefficients[2])) +
transition_states(rep)
library(gganimate)
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_abline(aes(intercept=lm(data=simdat, formula=y~x)$coefficients[1], slope=lm(data=simdat, formula=y~x)$coefficients[2])) +
transition_states(rep)
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_abline(aes(intercept=lm(data=df, formula=y~x)$coefficients[1], slope=lm(data=df, formula=y~x)$coefficients[2])) +
transition_states(rep)
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm") +
transition_states(rep)
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm")
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
transition_states(rep)
aim
install.packages("transformr")
library(transformr)
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep)
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE)
aim
?transition_states
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep, transition_length = 3, state_length = 1) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "{closest_state}")
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep, transition_length = 3, state_length = 1) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {closest_state} of 50") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep, transition_length = 5, state_length = 1) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {closest_state} of 50")
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_time(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {time_frame} of 50")
aim
?time_frame
?transition_time
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_time(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE)
aim
animate(aim)
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {closest_state} of 50")
animate(aim, fps=1)
animate(aim, fps=2)
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {closest_state} of 50") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(aim, fps=3)
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_time(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {frame_time} of 50")
animate(aim, fps=3)
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_state(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {previous_state} of 50")
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {previous_state} of 50")
animate(aim, fps=3)
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {previous_state} of 50") +
exit_fade()
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {previous_state} of 50")
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {closest_state} of 50") + shadow_trail()
aim
?ease_aes
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {closest_state} of 50") + ease_aes("cubin-in")
aim
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {closest_state} of 50") + ease_aes("cubic-in")
aim
lm(y~x, filter(df,rep==1), method="lm")
lm(y~x, filter(df,rep==1))
simfun <- function(nrep = 420, b0 = 700, b1 = -2) {
maindat <- data.frame(eta=rnorm(nrep,0,20), x = rnorm(nrep,20,2), rep=1) %>%
mutate(y = b0 -b1*x + eta)
for (i in 2:50) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2), rep=i) %>%
mutate(y = 700 -2*x + eta)
maindat <-rbind(maindat, subdat)
}
assign("df",maindat,envir = .GlobalEnv)
}
simfun()
lm(y~x, filter(df,rep==1))
lm(y~x, filter(df,rep==2))
simfun <- function(nrep = 420, b0 = 700, b1 = -2) {
maindat <- data.frame(eta=rnorm(nrep,0,20), x = rnorm(nrep,20,2), rep=1) %>%
mutate(y = b0 +b1*x + eta)
for (i in 2:50) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2), rep=i) %>%
mutate(y = b0 +b1*x + eta)
maindat <-rbind(maindat, subdat)
}
assign("df",maindat,envir = .GlobalEnv)
}
simfun()
aim<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2, alpha = 0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
transition_states(rep) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Sample Number {closest_state} of 50") + ease_aes("cubic-in")
aim
ols<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.3) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "OLS Estimates In 100 Samples")
ols
ols<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.3) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "OLS Estimates In 100 Samples")
ols
animols <- ols +
geom_point() +
transition_states(rep) +
labs(subtitle = "Sample Number {closest_state} of 100")
animols
?animate
ols<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 2) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.3) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "OLS Estimates In 100 Samples") +
ylim(575,775)
ols
ols<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 1.5) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.3) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "OLS Estimates In 100 Samples") +
ylim(575,775)
animols <- ols +
geom_point() +
transition_states(rep) +
labs(subtitle = "Sample Number {closest_state} of 100")
animate(animols, fps=4, device="ragg_png")
animate(animols, fps=4, device="svg")
animate(animols, fps=4, device="png", res=300)
animate(animols, fps=4, device="png", res=150)
animate(animols, fps=4, device="png", res=96)
simfun <- function(nrep = 420, b0 = 700, b1 = -2) {
maindat <- data.frame(eta=rnorm(nrep,0,20), x = rnorm(nrep,20,2), rep=1) %>%
mutate(y = b0 +b1*x + eta)
for (i in 2:100) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2), rep=i) %>%
mutate(y = b0 +b1*x + eta)
maindat <-rbind(maindat, subdat)
}
assign("df",maindat,envir = .GlobalEnv)
}
simfun()
ols<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 1.5) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.3) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "OLS Estimates In 100 Samples") +
ylim(575,775)
animols <- ols +
geom_point() +
transition_states(rep) +
labs(subtitle = "OLS Estimates In 100 Samples (Sample Number {closest_state} of 100)")
animate(animols, fps=4, fig.width="1512px", fig.height = "1512px")
simfun <- function(nrep = 420, b0 = 700, b1 = -2) {
maindat <- data.frame(eta=rnorm(nrep,0,20), x = rnorm(nrep,20,2), rep=1) %>%
mutate(y = b0 +b1*x + eta)
for (i in 2:100) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2), rep=i) %>%
mutate(y = b0 +b1*x + eta)
maindat <-rbind(maindat, subdat)
}
assign("df",maindat,envir = .GlobalEnv)
}
simfun()
ols<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 1.5) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.3) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "OLS Estimates In 100 Samples") +
ylim(575,775)
animols <- ols +
geom_point() +
transition_states(rep) +
labs(subtitle = "OLS Estimates In 100 Samples (Sample Number {closest_state} of 100)")
animate(animols, fps=4, width="1512px", height = "1512px")
simfun <- function(nrep = 420, b0 = 700, b1 = -2) {
maindat <- data.frame(eta=rnorm(nrep,0,20), x = rnorm(nrep,20,2), rep=1) %>%
mutate(y = b0 +b1*x + eta)
for (i in 2:100) {
subdat <- data.frame(eta=rnorm(nrep,0,20), x=rnorm(nrep,20,2), rep=i) %>%
mutate(y = b0 +b1*x + eta)
maindat <-rbind(maindat, subdat)
}
assign("df",maindat,envir = .GlobalEnv)
}
simfun()
ols<-ggplot(df, aes(x=x, y=y, group=as.factor(rep))) +
geom_smooth(method="lm", se=FALSE, color = 'deeppink3', size = 1.5) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.3) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "OLS Estimates In 100 Samples") +
ylim(575,775)
animols <- ols +
geom_point() +
transition_states(rep) +
labs(subtitle = "OLS Estimates In 100 Samples (Sample Number {closest_state} of 100)")
animate(animols, fps=4, width=1512, height = 1512, units="px")
animate(animols, fps=4, width=1512, height = 1512, units="px", dpi=72)
xaringan::decktape("SLR", "SLR.pdf", docker=FALSE)
library(xaringan)
xaringan::decktape("SLR", "SLR.pdf", docker=FALSE)
?decktape()
decktape("SLR", "SLR.pdf", docker=FALSE)
decktape("SLR", "SLR.pdf")
Sys.which("decktape")
library(xaringan)
library(renderthis)
to_pdf("SLR.Rmd")
