usdata<-covid19.data("ts-confirmed-US")
View(usdata)
View(statepop)
clist<-as.vector(V1)
clist<-as.vector(statepop$V1)
usdata<-covid19.data("ts-confirmed-US") %>% tots.per.location(geo.loc=clist) %>% select(1:(last_col()-2)) %>% gather(Date,cases,contains("-"))
usdata<-covid19.data("ts-confirmed-US") %>% tots.per.location(geo.loc=clist, debrief=FALSE) %>% select(1:(last_col()-2)) %>% gather(Date,cases,contains("-"))
usdata<-covid19.data("ts-confirmed-US") %>% tots.per.location(geo.loc=clist, debrief="FALSE") %>% select(1:(last_col()-2)) %>% gather(Date,cases,contains("-"))
usdata<-covid19.data("ts-confirmed-US") %>% tots.per.location(geo.loc=clist, nbr.plts=0) %>% select(1:(last_col()-2)) %>% gather(Date,cases,contains("-"))
usdata<-covid19.data("ts-confirmed-US") %>% aggregate(contains("-"),by=(Category=Province_State), FUN=sum) %>% select(1:(last_col()-2)) %>% gather(Date,cases,contains("-"))
usdata<-covid19.data("ts-confirmed-US") %>% aggregate(contains("-"),by=(Category=usdata$Province_State), FUN=sum) %>% select(1:(last_col()-2)) %>% gather(Date,cases,contains("-"))
usdata<-covid19.data("ts-confirmed-US") %>% aggregate(contains("-"),by=list(Category=usdata$Province_State), FUN=sum)
test<-summarize(usdata)
View(test)
usdata<-covid19.data("ts-confirmed-US")
test<-summarize(usdata)
View(test)
summarize(usdata)
summarize(usdata, summarize_all)
summarize_all(usdata)
test<- aggregate(usdata[,5:450],by=list(Category=usdata$Province_State), FUN=sum)
View(test)
usdata <- aggregate(usdata[,5:450],by=list(Category=usdata$Province_State), FUN=sum) %>% select(1:(last_col()-2)) %>% gather(Date,cases,contains("-"))
usdata <-covid19.data("ts-confirmed-US")
usdata <- aggregate(usdata[,5:450],by=list(Category=usdata$Province_State), FUN=sum)
usdata <-covid19.data("ts-confirmed-US")
usdata <- aggregate(usdata[,5:last_col()],by=list(Category=usdata$Province_State), FUN=sum)
tail(names(usdata))
tail(names(usdata),1)
usdata <- aggregate(usdata[,5:tail(names(usdata),1)],by=list(Category=usdata$Province_State), FUN=sum)
usdata <-covid19.data("ts-confirmed-US")
usdata <- aggregate(usdata[,5:ncol(usdata)],by=list(Category=usdata$Province_State), FUN=sum)
usdata <-covid19.data("ts-confirmed-US")
usdata <- aggregate(usdata[,5:ncol(usdata)],by=list(Category=usdata$Province_State), FUN=sum)
usdata <-covid19.data("ts-confirmed-US")
usdata <- aggregate(usdata[,5:ncol(usdata)],by=list(Category=usdata$Province_State), FUN=sum)  %>% gather(Date,cases,contains("-"))
usdata <-covid19.data("ts-confirmed-US")
usdata <- aggregate(usdata[,5:ncol(usdata)],by=list(Category=usdata$Province_State), FUN=sum)  %>% gather(Date,cases,contains("-"))
usdata$cases<-as.numeric(usdata$cases)
usdata$Date<-as.Date(usdata$Date)
usdata<- inner_join(usdata,statepop, by=c("Category"="V1"))
statepop <-cbind(toupper(state.name),state.x19) %>% as.tibble() %>% select(1:2)
statepop$population <-as.numeric(statepop$population)
usdata <-covid19.data("ts-confirmed-US")
usdata <- aggregate(usdata[,5:ncol(usdata)],by=list(Category=usdata$Province_State), FUN=sum)  %>% gather(Date,cases,contains("-"))
usdata$cases<-as.numeric(usdata$cases)
usdata$Date<-as.Date(usdata$Date)
View(statepop)
usdata$Category<-toupper(usdata$Category)
usdata <-covid19.data("ts-confirmed-US")
usdata <- aggregate(usdata[,5:ncol(usdata)],by=list(Category=usdata$Province_State), FUN=sum)  %>% gather(Date,cases,contains("-"))
usdata$cases<-as.numeric(usdata$cases)
usdata$Date<-as.Date(usdata$Date)
usdata$Category<-toupper(usdata$Category)
usdata<- inner_join(usdata,statepop, by=c("Category"="V1"))
candatacomp<-candata%>% as.tibble() %>% select(Date, Province, cumConfirmations, population)  %>% rename(Long_=Province  , cases = cumConfirmations )
combinedata <- bind_rows(fldata, candatacomp) %>%group_by(Long_) %>% mutate(newcases=c(NA,diff(cases)), newcasespermil = 1000000*(newcases/population), sevavgcases=rollmean(newcasespermil, 7, fill = list(NA, NULL, NA))) %>% rename(StateProv=Long_)
ggplot() + geom_line(data=combinedata,aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
combinedata <- bind_rows(usdata, candatacomp) %>%group_by(Long_) %>% mutate(newcases=c(NA,diff(cases)), newcasespermil = 1000000*(newcases/population), sevavgcases=rollmean(newcasespermil, 7, fill = list(NA, NULL, NA))) %>% rename(StateProv=Long_)
ggplot() + geom_line(data=combinedata,aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
View(combinedata)
View(candatacomp)
usdata<- inner_join(usdata,statepop, by=c("Category"="V1")) %>% rename(Long_==Category)
usdata <-covid19.data("ts-confirmed-US")
usdata <- aggregate(usdata[,5:ncol(usdata)],by=list(Category=usdata$Province_State), FUN=sum)  %>% gather(Date,cases,contains("-"))
usdata$cases<-as.numeric(usdata$cases)
usdata$Date<-as.Date(usdata$Date)
usdata$Category<-toupper(usdata$Category)
usdata<- inner_join(usdata,statepop, by=c("Category"="V1")) %>% rename(Category = Long_)
usdata <-covid19.data("ts-confirmed-US")
usdata <- aggregate(usdata[,5:ncol(usdata)],by=list(Category=usdata$Province_State), FUN=sum)  %>% gather(Date,cases,contains("-"))
usdata$cases<-as.numeric(usdata$cases)
usdata$Date<-as.Date(usdata$Date)
usdata$Category<-toupper(usdata$Category)
usdata<- inner_join(usdata,statepop, by=c("Category"="V1")) %>% rename(Category == Long_)
usdata <-covid19.data("ts-confirmed-US")
usdata <- aggregate(usdata[,5:ncol(usdata)],by=list(Category=usdata$Province_State), FUN=sum)  %>% gather(Date,cases,contains("-"))
usdata$cases<-as.numeric(usdata$cases)
usdata$Date<-as.Date(usdata$Date)
usdata$Category<-toupper(usdata$Category)
usdata<- inner_join(usdata,statepop, by=c("Category"="V1")) %>% rename("Long_" = "Category")
combinedata <- bind_rows(usdata, candatacomp) %>%group_by() %>% mutate(newcases=c(NA,diff(cases)), newcasespermil = 1000000*(newcases/population), sevavgcases=rollmean(newcasespermil, 7, fill = list(NA, NULL, NA))) %>% rename(StateProv=Long_)
ggplot() + geom_line(data=combinedata,aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
combinedata <- bind_rows(usdata, candatacomp) %>%group_by(Long_) %>% mutate(newcases=c(NA,diff(cases)), newcasespermil = 1000000*(newcases/population), sevavgcases=rollmean(newcasespermil, 7, fill = list(NA, NULL, NA))) %>% rename(StateProv=Long_)
ggplot() + geom_line(data=combinedata,aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
ggplot() + geom_line(data=filter(combinedata,plotlist),aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
plotlist<-c(ON,MICHIGAN, NS)
plotlist<-c("ON","MICHIGAN", "NS")
ggplot() + geom_line(data=filter(combinedata,Long==plotlist),aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
ggplot() + geom_line(data=filter(combinedata StateProv==plotlist),aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
plotlist<-c("ON","MICHIGAN", "NS", "Florida", "Texas")
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
plotlist<-c("ON","MICHIGAN", "NS", "FLORIDA", "TEXAS")
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
install.packages("gganimate")
plotlist<-c("ON","FLORIDA")
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal() + transition_reveal(Date)
library(gganimate)
install.packages("gifski")
install.packages("gifski")
install.packages("gifski")
install.packages("gifski")
plotlist<-c("ON","FLORIDA")
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal() + transition_reveal(Date)
devtools::install_github("r-rust/gifski")
devtools::install_github("r-rust/gifski")
plotlist<-c("ON","FLORIDA")
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal() + transition_reveal(Date)
test<-ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal() + transition_reveal(Date)
animate(test, renderer=sprite_renderer())
library(gifski)
animate(test, renderer=gifski_renderer())
install.packages("magick")
library(magick)
animate(test, renderer=sprite_renderer())
usdata <-covid19.data("ts-ALL-US")
usdata <-covid19.data("ts-confirmed-US")
View(usdata)
test<-covid19.US.data()
View(test)
usdata <-covid19.data("ts-ALL")
View(usdata)
usdata <-covid19.data("ALL")
View(usdata)
usdata <-covid19.data(c("ts-deaths-US", "ts-confirmed-US"))
View(usdata)
usdata <-covid19.data(ts-confirmed-US) %>% mutate(type="deaths")
usdata <-covid19.data("ts-confirmed-US") %>% mutate(type="deaths")
View(usdata)
usdata1 <-covid19.data("ts-confirmed-US") %>% mutate(type="cumConfirmations")
usdata2 <-covid19.data("ts-deaths-US") %>% mutate(type="cumDeaths")
usdata <- bind_rows(usdata1, usdata2)
View(usdata)
usdata <- aggregate(usdata[,5:ncol(usdata)],by=list(Category=c(usdata$Province_State, usdata$type)), FUN=sum)
usdata <- aggregate(usdata[,5:ncol(usdata)],list(usdata$Province_State, usdata$type), sum)
usdata <- aggregate(usdata[,5:ncol(usdata)],by=list(usdata$Province_State, usdata$type), FUN=sum)
usdata <- aggregate(usdata[,5:(ncol(usdata)-1)],by=list(usdata$Province_State, usdata$type), FUN=sum)
usdata1 <-covid19.data("ts-confirmed-US") %>% mutate(type="cumConfirmations")
usdata2 <-covid19.data("ts-deaths-US") %>% mutate(type="cumDeaths")
usdata <- bind_rows(usdata1, usdata2)
usdata1 <-covid19.data("ts-confirmed-US") %>% mutate(type="cumConfirmations")
usdata2 <-covid19.data("ts-deaths-US") %>% mutate(type="cumDeaths")
usdata <- bind_rows(usdata1, usdata2) %>% relocate(type,.before=Lat)
usdata1 <-covid19.data("ts-confirmed-US") %>% mutate(type="cumConfirmations")
usdata2 <-covid19.data("ts-deaths-US") %>% mutate(type="cumDeaths")
usdata <- bind_rows(usdata1, usdata2) %>% relocate(type,.before=Lat)
usdata <- aggregate(usdata[,6:ncol(usdata)],by=list(usdata$Province_State, usdata$type), FUN=sum)  %>% gather(Date,cases,contains("-"))
usdata$cases<-as.numeric(usdata$cases)
usdata$Date<-as.Date(usdata$Date)
usdata1 <-covid19.data("ts-confirmed-US") %>% mutate(type="cumConfirmations")
usdata2 <-covid19.data("ts-deaths-US") %>% mutate(type="cumDeaths")
usdata <- bind_rows(usdata1, usdata2) %>% relocate(type,.before=Lat)
usdata <- aggregate(usdata[,6:ncol(usdata)],by=list(usdata$Province_State, usdata$type), FUN=sum)  %>% gather(Date,cases,contains("-"))
usdata$cases<-as.numeric(usdata$cases)
usdata$Date<-as.Date(usdata$Date)
usdata$Category<-toupper(usdata$Group.1)
usdata<- inner_join(usdata,statepop, by=c("Group.1"="V1")) %>% rename("Long_" = "Group.1")
usdata1 <-covid19.data("ts-confirmed-US") %>% mutate(type="cumConfirmations")
usdata2 <-covid19.data("ts-deaths-US") %>% mutate(type="cumDeaths")
usdata <- bind_rows(usdata1, usdata2) %>% relocate(type,.before=Lat)
usdata <- aggregate(usdata[,6:ncol(usdata)],by=list(usdata$Province_State, usdata$type), FUN=sum)  %>% gather(Date,cases,contains("-"))
usdata$cases<-as.numeric(usdata$cases)
usdata$Date<-as.Date(usdata$Date)
usdata$Group.1<-toupper(usdata$Group.1)
usdata<- inner_join(usdata,statepop, by=c("Group.1"="V1")) %>% rename("Long_" = "Group.1")
View(usdata1)
View(usdata2)
usdata1 <-covid19.data("ts-confirmed-US") %>% mutate(type="cumConfirmations")
usdata2 <-covid19.data("ts-deaths-US") %>% mutate(type="cumDeaths")
usdata <- bind_rows(usdata1, usdata2) %>% relocate(type,.before=Lat)
usdata <- aggregate(usdata[,6:ncol(usdata)],by=list(usdata$Province_State, usdata$type), FUN=sum)
usdata1 <-covid19.data("ts-confirmed-US") %>% mutate(type="cumConfirmations")
usdata2 <-covid19.data("ts-deaths-US") %>% mutate(type="cumDeaths")
usdata <- bind_rows(usdata1, usdata2) %>% relocate(type,.before=Lat)
usdata <- aggregate(usdata[,6:ncol(usdata)],by=list(usdata$Province_State, usdata$type), FUN=sum)  %>% gather(Date,cases,contains("-"))
usdata <- aggregate(usdata[,6:ncol(usdata)],by=list(usdata$Province_State, usdata$type), FUN=sum)  %>% gather(Date,cases,c(contains("-"), Group.2))
usdata1 <-covid19.data("ts-confirmed-US") %>% mutate(type="cumConfirmations")
usdata2 <-covid19.data("ts-deaths-US") %>% mutate(type="cumDeaths")
usdata <- bind_rows(usdata1, usdata2) %>% relocate(type,.before=Lat)
usdata <- aggregate(usdata[,6:ncol(usdata)],by=list(usdata$Province_State, usdata$type), FUN=sum)  %>% gather(Date,cases,c(contains("-"), Group.2))
usdata1 <-covid19.data("ts-confirmed-US") %>% gather(Date,cumConfirmations,contains("-"))
usdata1 <-covid19.data("ts-confirmed-US")
usdata1 <-covid19.data("ts-confirmed-US") %>% aggregate(usdata1[,5:ncol(usdata1)],by=list(usdata1$Province_State), FUN=sum)
usdata1 <- aggregate(covid19.data("ts-confirmed-US")[,5:ncol(covid19.data("ts-confirmed-US"))],by=list(usdata1$Province_State), FUN=sum)
usdata1 <- aggregate(covid19.data("ts-confirmed-US")[,5:ncol(covid19.data("ts-confirmed-US"))],by=list(usdata1$Province_State), FUN=sum) %>% gather(Date,cumConfirmations,contains("-"))
usdata1 <- aggregate(covid19.data("ts-confirmed-US")[,5:ncol(covid19.data("ts-confirmed-US"))],by=list(covid19.data("ts-confirmed-US")$Province_State), FUN=sum) %>% gather(Date,cumConfirmations,contains("-"))
usdata<- inner_join(usdata1,usdata2, by=c("Group.1", "Date")) %>% rename("Long_" = "Group.1")
usdata2 <- aggregate(covid19.data("ts-deaths-US")[,5:ncol(covid19.data("ts-deaths-US"))],by=list(covid19.data("ts-deaths-US")$Province_State), FUN=sum) %>% gather(Date,cumDeaths,contains("-"))
usdata<- inner_join(usdata1,usdata2, by=c("Group.1", "Date")) %>% rename("Long_" = "Group.1")
View(usdata)
usdata1 <- aggregate(covid19.data("ts-confirmed-US")[,5:ncol(covid19.data("ts-confirmed-US"))],by=list(covid19.data("ts-confirmed-US")$Province_State), FUN=sum) %>% gather(Date,cumConfirmations,contains("-"))
usdata2 <- aggregate(covid19.data("ts-deaths-US")[,5:ncol(covid19.data("ts-deaths-US"))],by=list(covid19.data("ts-deaths-US")$Province_State), FUN=sum) %>% gather(Date,cumDeaths,contains("-"))
usdata<- inner_join(usdata1,usdata2, by=c("Group.1", "Date")) %>% rename("Long_" = "Group.1")
usdata$Date<-as.Date(usdata$Date)
usdata$Group.1<-toupper(usdata$Group.1)
usdata<- inner_join(usdata,statepop, by=c("Group.1"="V1"))
usdata1 <- aggregate(covid19.data("ts-confirmed-US")[,5:ncol(covid19.data("ts-confirmed-US"))],by=list(covid19.data("ts-confirmed-US")$Province_State), FUN=sum) %>% gather(Date,cumConfirmations,contains("-"))
usdata2 <- aggregate(covid19.data("ts-deaths-US")[,5:ncol(covid19.data("ts-deaths-US"))],by=list(covid19.data("ts-deaths-US")$Province_State), FUN=sum) %>% gather(Date,cumDeaths,contains("-"))
usdata<- inner_join(usdata1,usdata2, by=c("Group.1", "Date")) %>% rename("Long_" = "Group.1")
usdata$Date<-as.Date(usdata$Date)
usdata$Long_<-toupper(usdata$Long_)
usdata<- inner_join(usdata,statepop, by=c("Long_"="V1"))
View(candata)
candatacomp<-candata%>% as.tibble() %>% select(Date, Province, cumConfirmations, population)  %>% rename(Long_=Province  , cases = cumConfirmations )
usdata1 <- aggregate(covid19.data("ts-confirmed-US")[,5:ncol(covid19.data("ts-confirmed-US"))],by=list(covid19.data("ts-confirmed-US")$Province_State), FUN=sum) %>% gather(Date,cumConfirmations,contains("-"))
usdata2 <- aggregate(covid19.data("ts-deaths-US")[,5:ncol(covid19.data("ts-deaths-US"))],by=list(covid19.data("ts-deaths-US")$Province_State), FUN=sum) %>% gather(Date,cumDeaths,contains("-"))
usdata<- inner_join(usdata1,usdata2, by=c("Group.1", "Date")) %>% rename("Long_" = "Group.1")
usdata$Date<-as.Date(usdata$Date)
usdata$Long_<-toupper(usdata$Long_)
usdata<- inner_join(usdata,statepop, by=c("Long_"="V1"))
combinedata <- bind_rows(usdata, candatacomp) %>%group_by(Long_) %>% mutate(newcases=c(NA,diff(cumConfirmations)), newdeaths =c(NA,diff(cunDeaths)), newcasespermil = 1000000*(newcases/population), sevavgcases=rollmean(newcasespermil, 7, fill = list(NA, NULL, NA)), newdeathspermil = 1000000*(newcases/population), sevavgdeaths=rollmean(newdeathspermil, 7, fill = list(NA, NULL, NA))) %>% rename(StateProv=Long_)
combinedata <- bind_rows(usdata, candatacomp) %>%group_by(Long_) %>% mutate(newcases=c(NA,diff(cumConfirmations)), newdeaths =c(NA,diff(cumDeaths)), newcasespermil = 1000000*(newcases/population), sevavgcases=rollmean(newcasespermil, 7, fill = list(NA, NULL, NA)), newdeathspermil = 1000000*(newcases/population), sevavgdeaths=rollmean(newdeathspermil, 7, fill = list(NA, NULL, NA))) %>% rename(StateProv=Long_)
plotlist<-c("ON","FLORIDA")
test<-ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgdeaths, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
statepop <-cbind(toupper(state.name),state.x19) %>% as.tibble() %>% select(1:2)
statepop$population <-as.numeric(statepop$population)
usdata1 <- aggregate(covid19.data("ts-confirmed-US")[,5:ncol(covid19.data("ts-confirmed-US"))],by=list(covid19.data("ts-confirmed-US")$Province_State), FUN=sum) %>% gather(Date,cumConfirmations,contains("-"))
usdata2 <- aggregate(covid19.data("ts-deaths-US")[,5:ncol(covid19.data("ts-deaths-US"))],by=list(covid19.data("ts-deaths-US")$Province_State), FUN=sum) %>% gather(Date,cumDeaths,contains("-"))
usdata<- inner_join(usdata1,usdata2, by=c("Group.1", "Date")) %>% rename("Long_" = "Group.1")
usdata$Date<-as.Date(usdata$Date)
usdata$Long_<-toupper(usdata$Long_)
usdata<- inner_join(usdata,statepop, by=c("Long_"="V1"))
candatacomp<-candata%>% as.tibble() %>% select(Date, Province, cumConfirmations, deaths, population)  %>% rename(Long_=Province , cumDeaths = deceased  )
usdata1 <- aggregate(covid19.data("ts-confirmed-US")[,5:ncol(covid19.data("ts-confirmed-US"))],by=list(covid19.data("ts-confirmed-US")$Province_State), FUN=sum) %>% gather(Date,cumConfirmations,contains("-"))
usdata2 <- aggregate(covid19.data("ts-deaths-US")[,5:ncol(covid19.data("ts-deaths-US"))],by=list(covid19.data("ts-deaths-US")$Province_State), FUN=sum) %>% gather(Date,cumDeaths,contains("-"))
usdata<- inner_join(usdata1,usdata2, by=c("Group.1", "Date")) %>% rename("Long_" = "Group.1")
usdata$Date<-as.Date(usdata$Date)
usdata$Long_<-toupper(usdata$Long_)
usdata<- inner_join(usdata,statepop, by=c("Long_"="V1"))
candatacomp<-candata%>% as.tibble() %>% select(Date, Province, cumConfirmations, deceased, population)  %>% rename(Long_=Province , cumDeaths = deceased  )
candata<-read.csv("https://wzmli.github.io/COVID19-Canada/git_push/clean.Rout.csv") %>% filter(newTests>=0) %>% mutate(newdeaths=c(NA,diff(deceased)), sevposrate =rollmean(prop, 7, fill = list(NA, NULL, NA)), icuratio=rollmean(ICU/Hospitalization, 7, fill = list(NA, NULL, NA)),newcasespermil=1000000*(newConfirmations/14734014) ,sevavgcases=rollmean(newcasespermil, 7, fill = list(NA, NULL, NA), align = "right"), sevavgdeath=rollmean(newdeaths, 7, fill = list(NA, NULL, NA), align = "right"),sevavgicu=rollmean(ICU, 7, fill = list(NA, NULL, NA), align = "right"))
candata$Date<-as.Date(candata$Date)
cansim<-get_cansim("17-10-0005-01") %>% rename(  "agegrp"="Age group", "population"= "VALUE") %>% filter(agegrp == "All ages", REF_DATE == "2020", Sex == "Both sexes") %>% select(GEO, population)
cansim<-mutate(cansim, GEO = replace(GEO, GEO == "Ontario", "ON"),
GEO = replace(GEO, GEO == "Newfoundland and Labrador", "NL"),
GEO = replace(GEO, GEO == "Prince Edward Island", "PEI"),
GEO = replace(GEO, GEO == "Nova Scotia", "NS"),
GEO = replace(GEO, GEO == "New Brunswick", "NB"),
GEO = replace(GEO, GEO == "Quebec", "QC"),
GEO = replace(GEO, GEO == "Manitoba", "MB"),
GEO = replace(GEO, GEO == "Saskatchewan", "SK"),
GEO = replace(GEO, GEO == "Alberta", "AB"),
GEO = replace(GEO, GEO == "British Columbia", "BC"),
GEO = replace(GEO, GEO == "Yukon", "YK"),
GEO = replace(GEO, GEO == "Northwest Territories", "NT"),
GEO = replace(GEO, GEO == "Nunavut", "NU"))
candata<- inner_join(candata,cansim, by=c("Province"="GEO"))
statepop <-cbind(toupper(state.name),state.x19) %>% as.tibble() %>% select(1:2)
statepop$population <-as.numeric(statepop$population)
usdata1 <- aggregate(covid19.data("ts-confirmed-US")[,5:ncol(covid19.data("ts-confirmed-US"))],by=list(covid19.data("ts-confirmed-US")$Province_State), FUN=sum) %>% gather(Date,cumConfirmations,contains("-"))
usdata2 <- aggregate(covid19.data("ts-deaths-US")[,5:ncol(covid19.data("ts-deaths-US"))],by=list(covid19.data("ts-deaths-US")$Province_State), FUN=sum) %>% gather(Date,cumDeaths,contains("-"))
usdata<- inner_join(usdata1,usdata2, by=c("Group.1", "Date")) %>% rename("Long_" = "Group.1")
usdata$Date<-as.Date(usdata$Date)
usdata$Long_<-toupper(usdata$Long_)
usdata<- inner_join(usdata,statepop, by=c("Long_"="V1"))
candatacomp<-candata%>% as.tibble() %>% select(Date, Province, cumConfirmations, deceased, population)  %>% rename(Long_=Province , cumDeaths = deceased  )
combinedata <- bind_rows(usdata, candatacomp) %>%group_by(Long_) %>% mutate(newcases=c(NA,diff(cumConfirmations)), newdeaths =c(NA,diff(cumDeaths)), newcasespermil = 1000000*(newcases/population), sevavgcases=rollmean(newcasespermil, 7, fill = list(NA, NULL, NA)), newdeathspermil = 1000000*(newdeaths/population), sevavgdeaths=rollmean(newdeathspermil, 7, fill = list(NA, NULL, NA))) %>% rename(StateProv=Long_)
plotlist<-c("ON","FLORIDA")
test<-ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgdeaths, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
plotlist<-c("ON","FLORIDA")
test<-ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgdeaths, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
plotlist<-c("ON","NS", "NL", "PEI", "NB")
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgdeaths, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
plotlist<-c("ON","NS", "NL", "PEI", "NB", "QC")
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgdeaths, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
plotlist<-c("ON","NS", "NL", "PEI", "NB", "QC")
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgdeaths, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal() +transition_reveal(Date)
test<-ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgdeaths, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal() +transition_reveal(Date)
animate(test)
plotlist<-c("ON","NS", "NL", "PEI", "NB", "QC")
test<-ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal() +transition_reveal(Date)
view(test)
test
plotlist<-c("ON","NS", "NL", "PEI", "NB", "QC")
test<-ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
plotlist<-c("ON","NS", "NL", "PEI", "NB", "QC")
test<-ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgdeaths, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
plotlist<-c("ON","NS", "NL", "PEI", "NB", "QC")
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
candata<-read.csv("https://wzmli.github.io/COVID19-Canada/git_push/clean.Rout.csv") %>% filter(newTests>=0) %>% mutate(newdeaths=c(NA,diff(deceased)), sevposrate =rollmean(prop, 7, fill = list(NA, NULL, NA)), icuratio=rollmean(ICU/Hospitalization, 7, fill = list(NA, NULL, NA)),newcasespermil=1000000*(newConfirmations/14734014) ,sevavgcases=rollmean(newcasespermil, 7, fill = list(NA, NULL, NA), align = "right"), sevavgdeath=rollmean(newdeaths, 7, fill = list(NA, NULL, NA), align = "right"),sevavgicu=rollmean(ICU, 7, fill = list(NA, NULL, NA), align = "right"))
candata$Date<-as.Date(candata$Date)
cansim<-get_cansim("17-10-0005-01") %>% rename(  "agegrp"="Age group", "population"= "VALUE") %>% filter(agegrp == "All ages", REF_DATE == "2020", Sex == "Both sexes") %>% select(GEO, population)
cansim<-mutate(cansim, GEO = replace(GEO, GEO == "Ontario", "ON"),
GEO = replace(GEO, GEO == "Newfoundland and Labrador", "NL"),
GEO = replace(GEO, GEO == "Prince Edward Island", "PEI"),
GEO = replace(GEO, GEO == "Nova Scotia", "NS"),
GEO = replace(GEO, GEO == "New Brunswick", "NB"),
GEO = replace(GEO, GEO == "Quebec", "QC"),
GEO = replace(GEO, GEO == "Manitoba", "MB"),
GEO = replace(GEO, GEO == "Saskatchewan", "SK"),
GEO = replace(GEO, GEO == "Alberta", "AB"),
GEO = replace(GEO, GEO == "British Columbia", "BC"),
GEO = replace(GEO, GEO == "Yukon", "YK"),
GEO = replace(GEO, GEO == "Northwest Territories", "NT"),
GEO = replace(GEO, GEO == "Nunavut", "NU"))
candata<- inner_join(candata,cansim, by=c("Province"="GEO"))
statepop <-cbind(toupper(state.name),state.x19) %>% as.tibble() %>% select(1:2)
statepop$population <-as.numeric(statepop$population)
usdata1 <- aggregate(covid19.data("ts-confirmed-US")[,5:ncol(covid19.data("ts-confirmed-US"))],by=list(covid19.data("ts-confirmed-US")$Province_State), FUN=sum) %>% gather(Date,cumConfirmations,contains("-"))
usdata2 <- aggregate(covid19.data("ts-deaths-US")[,5:ncol(covid19.data("ts-deaths-US"))],by=list(covid19.data("ts-deaths-US")$Province_State), FUN=sum) %>% gather(Date,cumDeaths,contains("-"))
usdata<- inner_join(usdata1,usdata2, by=c("Group.1", "Date")) %>% rename("Long_" = "Group.1")
usdata$Date<-as.Date(usdata$Date)
usdata$Long_<-toupper(usdata$Long_)
usdata<- inner_join(usdata,statepop, by=c("Long_"="V1"))
candatacomp<-candata%>% as.tibble() %>% select(Date, Province, cumConfirmations, deceased, population)  %>% rename(Long_=Province , cumDeaths = deceased  )
combinedata <- bind_rows(usdata, candatacomp) %>%group_by(Long_) %>% mutate(newcases=c(NA,diff(cumConfirmations)), newdeaths =c(NA,diff(cumDeaths)), newcasespermil = 1000000*(newcases/population), sevavgcases=rollmean(newcasespermil, 7, fill = list(NA, NULL, NA)), newdeathspermil = 1000000*(newdeaths/population), sevavgdeaths=rollmean(newdeathspermil, 7, fill = list(NA, NULL, NA))) %>% rename(StateProv=Long_)
plotlist<-c("ON","NS", "NL", "PEI", "NB", "QC")
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
warnings()
plotlist<-c("ON","NS")
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),
aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
ggplot() + geom_line(data=filter(combinedata ,StateProv==plotlist),aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
ggplot() + geom_line(data=filter(combinedata ,StateProv==c("ON","NS")),aes(x=Date, y=sevavgcases, color=StateProv))  + ylab("New Positive Cases Per Day per Million Residents") + ggtitle("COVID-19 Cases Per Day by Jurisdiction")  + theme_minimal()
library(cancensus)
library(tidyverse)
library(sf)
maindata<-get_census("CA21",regions=list(C="01"),level="CSD", vectors=c("v_CA21_1", "v_CA21_2","v_CA21_3"), geo_format = "sf", labels="short")
studydata<-select(maindata,"GeoUID", "PR_UID","v_CA21_1", "v_CA21_2", "v_CA21_3") %>%mutate(prank=100*percent_rank(.$v_CA21_1))
View(studydata)
View(maindata)
View(maindata)
View(studydata)
View(maindata)
View(studydata)
sd2<-filter(studydata,PR_UID == 35)
View(sd2)
dev()
library(sf)
library(scales)
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(hrbrthemes)
library(kableExtra)
library(viridis)
library(DT)
library(plotly)
library(readxl)
library(rgeos)
library(maptools)
library(directlabels)
library(ggrepel)
library(ggthemes)
library(cancensus)
library(bookdown)
library(geomtextpath)
library(egg)
library(ggtext)
library(ragg)
library(scico)
library(haven)
library(here)
library(knitr)
library(imager)
knitr::opts_chunk$set(
echo=FALSE,
results = 'hide',
message = FALSE,
warning = FALSE
)
set.seed(9810078)
here::i_am("simple linear regression.Rmd")
set.seed(9810078)
data <- data.frame(eta=rnorm(10,0,20), str = rnorm(10,20,5)) %>%
mutate(testscore = 700 -2*str + eta )
prfplot <- data %>%
ggplot( aes(x=str, y=testscore)) +
geom_point(size=3, alpha=0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
geom_text(x=23, y=660, label = expression(beta[0]+beta[STR]~STR)) +
labs(title = "Population Regression Function", y="Test Score", x="Student Teacher Ratio")+
scale_x_continuous(breaks = scales::pretty_breaks())+
theme_pander(nomargin=FALSE, boxes=TRUE)
prfplot
prfplot
install.packages("xaringan")
library(xaringan)
xaringan::inf_mr()
names(xaringan::list_css())
names(xaringan:::list_css())
names(xaringan:::list_css())
devtools::install_github("hadley/emo")
devtools::install_github("hadley/emo")
library(emo)
options(htmltools.dir.version = FALSE)
set.seed(9810078)
data <- data.frame(eta=rnorm(10,0,20), str = rnorm(10,20,5)) %>%
mutate(testscore = 700 -2*str + eta )
prfplot <- data %>%
ggplot( aes(x=str, y=testscore)) +
geom_point(size=3, alpha=0.8) +
geom_abline(intercept = 700, slope = -2, color = 'aquamarine4', size = 2, alpha = 0.8) +
geom_text(x=23, y=660, label = expression(beta[0]+beta[STR]~STR)) +
labs(title = "Population Regression Function", y="Test Score", x="Student Teacher Ratio")+
scale_x_continuous(breaks = scales::pretty_breaks())+
theme_pander(nomargin=FALSE, boxes=TRUE)
prfplot
devtools::install_github("Hemken/Statamarkdown")
devtools::install_github("Hemken/Statamarkdown")
install.packages("renderthis")
library(renderthis)
library(cansim)
library(tidyverse)
library(lubridate)
library(stringr)
library(ggrepel)
library(ggthemes)
library(ragg)
cpiorig<-get_cansim("18-10-0004")
cpiorig$Date<-ymd(cpiorig$Date)
cpidata <-filter(cpiorig, ymd(Date) >= ymd(20200201),str_count(cpiorig$`Hierarchy for Products and product groups`,"\\.") == 1 |`Hierarchy for Products and product groups` ==2, GEO == "Canada") %>%
group_by(`Hierarchy for Products and product groups`) %>%
mutate(cpinewbase = 100*val_norm/first(val_norm), lab = str_replace(if_else(ymd(Date) == last(ymd(Date)),word(`Products and product groups`,1), as.character(NA) ), ",",""))
cpitrend<-ggplot(cpidata, aes(x= Date, y=cpinewbase, color=`Products and product groups`)) +
geom_line(size=1.5, alpha=0.8) +
theme_pander(nomargin=FALSE, boxes=TRUE)+
theme(legend.position = "none") +
scale_x_date(breaks = scales::pretty_breaks(n=9), limits=c(min(cpidata$Date),max(cpidata$Date)), expand = expansion(add=c(1,180))) +
geom_text_repel(aes(label = lab), direction = "y", hjust = "left", nudge_x = 20, arrow = arrow(length = unit(0.25, 'cm'), type = 'open'), na.rm=TRUE) +
labs(title = "CPI by Category (Feb 2020 = 100)", y="CPI (Feb 2020 = 100)", x="Date")
ragg::agg_png("cpiplot.png", width=7, height=5, units="in", res=300, scaling = 0.9)
cpitrend
dev.off()
setwd("~/Desktop")
library(cansim)
library(tidyverse)
library(lubridate)
library(stringr)
library(ggrepel)
library(ggthemes)
library(ragg)
cpiorig<-get_cansim("18-10-0004")
cpiorig$Date<-ymd(cpiorig$Date)
cpidata <-filter(cpiorig, ymd(Date) >= ymd(20200201),str_count(cpiorig$`Hierarchy for Products and product groups`,"\\.") == 1 |`Hierarchy for Products and product groups` ==2, GEO == "Canada") %>%
group_by(`Hierarchy for Products and product groups`) %>%
mutate(cpinewbase = 100*val_norm/first(val_norm), lab = str_replace(if_else(ymd(Date) == last(ymd(Date)),word(`Products and product groups`,1), as.character(NA) ), ",",""))
cpitrend<-ggplot(cpidata, aes(x= Date, y=cpinewbase, color=`Products and product groups`)) +
geom_line(size=1.5, alpha=0.8) +
theme_pander(nomargin=FALSE, boxes=TRUE)+
theme(legend.position = "none") +
scale_x_date(breaks = scales::pretty_breaks(n=9), limits=c(min(cpidata$Date),max(cpidata$Date)), expand = expansion(add=c(1,180))) +
geom_text_repel(aes(label = lab), direction = "y", hjust = "left", nudge_x = 20, arrow = arrow(length = unit(0.25, 'cm'), type = 'open'), na.rm=TRUE) +
labs(title = "CPI by Category (Feb 2020 = 100)", y="CPI (Feb 2020 = 100)", x="Date")
ragg::agg_png("cpiplot.png", width=7, height=5, units="in", res=300, scaling = 0.9)
cpitrend
dev.off()
View(cpidata)
library(cansim)
library(tidyverse)
library(lubridate)
library(stringr)
library(ggrepel)
library(ggthemes)
library(ragg)
cpiorig<-get_cansim("18-10-0004")
cpiorig$Date<-ymd(cpiorig$Date)
cpidata <-filter(cpiorig, ymd(Date) >= ymd(20200201),str_count(cpiorig$`Hierarchy for Products and product groups`,"\\.") == 1 |`Hierarchy for Products and product groups` ==2, GEO == "Canada") %>%
group_by(`Hierarchy for Products and product groups`) %>%
mutate(cpinewbase = 100*val_norm/first(val_norm), lab = str_replace(if_else(ymd(Date) == last(ymd(Date)),word(`Products and product groups`,1), as.character(NA) ), ",",""))
cpitrend<-ggplot(cpidata, aes(x= Date, y=cpinewbase, color=`Products and product groups`)) +
geom_line(size=1.5, alpha=0.8) +
theme_pander(nomargin=FALSE, boxes=TRUE)+
theme(legend.position = "none") +
scale_x_date(breaks = scales::pretty_breaks(n=10), limits=c(min(cpidata$Date),max(cpidata$Date)), expand = expansion(add=c(1,180))) +
geom_text_repel(aes(label = lab), direction = "y", hjust = "left", nudge_x = 20, arrow = arrow(length = unit(0.25, 'cm'), type = 'open'), na.rm=TRUE) +
labs(title = "CPI by Category (Feb 2020 = 100)", y="CPI (Feb 2020 = 100)", x="Date")
ragg::agg_png("cpiplot.png", width=7, height=5, units="in", res=300, scaling = 0.9)
cpitrend
dev.off()
shiny::runApp('~/Library/CloudStorage/OneDrive-WilfridLaurierUniversity/Teaching/EC295/shinytest/testaoo')
runApp('~/Library/CloudStorage/OneDrive-WilfridLaurierUniversity/Teaching/EC295/shinytest/testaoo')
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
?seq
data <- data.frame(eta=rnorm(500,0,input$var)) %>%
mutate(x = rnorm(500,0,2), y = 700 - 2*x + u)
data <- data.frame(eta=rnorm(500,0,20)) %>%
mutate(x = rnorm(500,0,2), y = 700 - 2*x + u)
data <- data.frame(eta=rnorm(500,0,20)) %>%
mutate(x = rnorm(500,0,2), y = 700 - 2*x + eta)
View(data)
runApp('~/Library/CloudStorage/OneDrive-WilfridLaurierUniversity/Teaching/EC295/shinytest/testaoo')
runApp('~/Library/CloudStorage/OneDrive-WilfridLaurierUniversity/Teaching/EC295/shinytest/testaoo')
runApp('~/Library/CloudStorage/OneDrive-WilfridLaurierUniversity/Teaching/EC295/shinytest/testaoo')
install.packages("stargazer")
runApp('~/Library/CloudStorage/OneDrive-WilfridLaurierUniversity/Teaching/EC295/shinytest/testaoo')
runApp('~/Library/CloudStorage/OneDrive-WilfridLaurierUniversity/Teaching/EC295/shinytest/testaoo')
runApp('~/Library/CloudStorage/OneDrive-WilfridLaurierUniversity/Teaching/EC295/shinytest/testaoo')
setwd("~/Library/CloudStorage/OneDrive-WilfridLaurierUniversity/Teaching/EC655/Fall-2022/linearregress")
lm(y~x,data = data)
